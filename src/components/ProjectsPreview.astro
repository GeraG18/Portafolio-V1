---
import { getCollection } from "astro:content";
import LinkButton from './LinkButton.astro';
import { Image } from 'astro:assets';

interface project {
    title: string;
    technologies: string[];
    urls: {name: string, url: string}[];
    image: any;
    startDate: string;
    endDate: string;
    role: string;
    slug: string;
    status: string;
    body: string;
}

const textProccesor = (text: string) => text.replace(/(`(?:``)?).*?\1|[\\*_{}[\]()#+\-.!`]/g, '');

const projects = (await getCollection('projects')).map((item: any) => ({...item.data, slug: item.slug, body: textProccesor(item.body)}));
// console.log('projects>', projects);

let lastProjects: project[] = projects.filter((item: any, index: any) => (index < 3));
// console.log('lastProjects>', lastProjects);

function filterTechnologies(value: string[]) {
    let array = value.filter((item, index) => (index < 3));
    value.length > 3 ? array.push(`Y ${value.length - 3} más`): undefined
    return array;
}

let buttonStyle = `
    inline-flex items-center justify-center gap-2 px-3 py-1 space-x-2 
    text-xl text-[--text] transition bg-transparent border border-[--text] 
    focus-visible:ring-[--accent-dark] text-md hover:bg-[--text]
    group rounded-full hover:text-[--background] focus:outline-none focus-visible:outline-none 
    focus-visible:ring focus-visible:ring-offset-2 !text-base
`;

---
<div class="w-full flex flex-col items-center justify-center !gap-4 group/list">
    {lastProjects?.map(({title, technologies, urls, image, status, slug, body}) => (
        <div class="group transition-all flex-none w-full h-full lg:h-[10rem] flex flex-col lg:flex-row gap-2 md:items-center justify-center lg:hover:!opacity-100 lg:group-hover/list:opacity-50
            motion-reduce:transition-none border border-transparent hover:lg:!bg-[--text-grayRGBA] rounded-md pr-2">
            <div class="aspect-video relative rounded-md h-[10rem] lg:h-full border border-[--text-gray] overflow-hidden flex items-center justify-center">
                {
                image ? 
                <Image src={image} alt="Imagen del Proyecto " class="absolute grayscale inset-0 h-full w-full object-cover group-hover:scale-110 group-hover:grayscale-0 transition-transform duration-500 ease-in-out !border-none"/>
                : 
                <div class="absolute bg-gray-200 w-full h-full text-[--text] flex flex-col items-center justify-center">
                    <span class="material-symbols-rounded text-2xl">
                        image
                    </span>
                    <span>Sin imagen</span>
                </div>
                }
            </div>
            <div class="w-full h-full flex flex-col items-start justify-center">
                <div class="flex flex-row items-center justify-center w-full">
                    <span class="font-semibold w-full">{title}</span>
                    <div class="w-fit flex-none flex flex-wrap gap-2 text-sm items-center justify-center overflow-y-auto overflow-x-hidden">
                        {
                            status === 'published' ?
                            <div class="inline-flex items-center justify-center gap-2 !px-3 space-x-2 bg-[--published] transition focus-visible:ring-[--accent-dark] text-md group rounded-full focus:outline-none focus-visible:outline-none focus-visible:ring focus-visible:ring-offset-2">
                                <span class="!text-base !text-[--background]">Activo</span>
                            </div>
                            :
                            (
                                status === 'in-progress' ?
                                <div class="inline-flex items-center justify-center gap-2 !px-3 space-x-2 bg-[--in-progress] transition focus-visible:ring-[--accent-dark] text-md group rounded-full focus:outline-none focus-visible:outline-none focus-visible:ring focus-visible:ring-offset-2">
                                    <span class="!text-base !text-[--background]">En progreso</span>
                                </div>
                                :
                                (
                                    status === 'inactive' ?
                                    <div class="inline-flex items-center justify-center gap-2 !px-3 space-x-2 bg-[--inactive] transition focus-visible:ring-[--accent-dark] text-md group rounded-full focus:outline-none focus-visible:outline-none focus-visible:ring focus-visible:ring-offset-2">
                                        <span class="!text-base !text-[--background]">Inactivo</span>
                                    </div>
                                    :
                                    <div class="inline-flex items-center justify-center gap-2 !px-3 space-x-2 bg-[--text-gray] transition focus-visible:ring-[--accent-dark] text-md group rounded-full focus:outline-none focus-visible:outline-none focus-visible:ring focus-visible:ring-offset-2">
                                        <span class="!text-base !text-[--background]">En espera</span>
                                    </div>
                                    
                                )	
                            )
                        }
                    </div>
                </div>
                <div class="w-full flex gap-2 text-sm items-center justify-start overflow-y-auto overflow-x-hidden">
                    {filterTechnologies(technologies)?.map((tech, index) => (
                        <span class="capitalize px-2 border-[1px] border-[--accent-darker] rounded-full !text-[--accent-darker] flex-none flex items-center justify-center gap-1"> 
                            <i class={"icon icon-"+tech}></i>
                            {tech.replace('-',' ')}
                        </span>
                    ))}
                </div>
                <p class="flex-none text-lg mb-[2px] two-line-trunc" set:html={body ? body : 'No hay una descripción'}>
                    
                </p>
                <div class="flex-none w-full flex flex-col lg:flex-row items-center justify-start gap-2">
                    <a href={`/projects/${slug}`} class={buttonStyle+' w-full lg:w-auto'}>
                        Detalles
                        <span class="material-symbols-rounded">
                            north_east
                        </span>
                    </a>
                    {
                        urls.length > 0
                        ?
                        <div class="hidden lg:block w-[1px] h-[70%] bg-[--text-gray]"></div>
                        :
                        ""
                    }
                    {urls.map(({name, url}) => (
                    <LinkButton  target="_blank" width="[14rem]" extraClasses="!text-base !py-1 w-full lg:w-auto" id="linkedinButton" href={url}>
                        {name} 
                        <span class="material-symbols-rounded">
                            captive_portal
                        </span>
                    </LinkButton>
                    ))}

                </div>
            </div>
        </div>

        <div class="w-full h-[1px] bg-[--text-gray-40] last:!hidden lg:hidden"></div>
    ))}

</div>

<style>
    .text-truncate {
        -webkit-line-clamp: 2;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>